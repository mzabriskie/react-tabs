
name: CI

on:
  push:
    branches:
      - main
      - renovate/**
  pull_request:

env:
  NODE_VERSION: 16

jobs:
  tests:
    name: Unit tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Cache node_modules
      uses: actions/cache@v3
      id: cache-nodemodules
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ env.NODE_VERSION }}-nodemodules-${{ hashFiles('**/yarn.lock') }}

    - name: Install dependencies
      if: steps.cache-nodemodules.outputs.cache-hit != 'true'
      run: yarn install --frozen-lockfile --non-interactive

    - name: Unit tests
      run: yarn test --ci --coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Cache node_modules
      uses: actions/cache@v3
      id: cache-nodemodules
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ env.NODE_VERSION }}-nodemodules-${{ hashFiles('**/yarn.lock') }}

    - name: Install dependencies
      if: steps.cache-nodemodules.outputs.cache-hit != 'true'
      run: yarn install --frozen-lockfile --non-interactive

    - name: Lint
      run: yarn lint

  website:
    name: Test build website
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Cache node_modules
      uses: actions/cache@v3
      id: cache-nodemodules
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ env.NODE_VERSION }}-nodemodules-${{ hashFiles('**/yarn.lock') }}

    - name: Install dependencies
      if: steps.cache-nodemodules.outputs.cache-hit != 'true'
      run: yarn install --frozen-lockfile --non-interactive

    - name: Build website
      run: yarn website

  release:
    needs: [tests, lint]
    if: github.ref == 'refs/heads/main'
    name: Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache-nodemodules
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.NODE_VERSION }}-nodemodules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --non-interactive

      - name: Release
        run: npx semantic-release --branches main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  deploy:
    name: Deploy website
    needs: [tests, lint]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache-nodemodules
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.NODE_VERSION }}-nodemodules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --non-interactive

      - name: Build
        run: yarn website

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4.2.5
        with:
          branch: gh-pages
          folder: examples/dist
